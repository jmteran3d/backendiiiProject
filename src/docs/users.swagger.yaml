openapi: 3.0.1
info:
  title: Users API
  version: 1.0.0
  description: >
    Documentación del módulo **Users** del Proyecto Final Dockerizado.
    Incluye operaciones CRUD sobre usuarios y sus validaciones básicas.

servers:
  - url: http://localhost:8080
    description: Servidor local

tags:
  - name: Users
    description: Endpoints del módulo de usuarios

paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags: [Users]
      responses:
        "200":
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor

    post:
      summary: Crear un nuevo usuario
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Datos inválidos o faltantes

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      tags: [Users]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado

    put:
      summary: Actualizar datos de un usuario
      tags: [Users]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: Usuario actualizado correctamente
        "400":
          description: Datos inválidos
        "404":
          description: Usuario no encontrado

    delete:
      summary: Eliminar un usuario por ID
      tags: [Users]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado correctamente
        "404":
          description: Usuario no encontrado

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 670fbc03df69b944d843e7a2
        first_name:
          type: string
          example: Jesús
        last_name:
          type: string
          example: Terán
        email:
          type: string
          example: jmteran3d@example.com
        role:
          type: string
          example: user
    UserInput:
      type: object
      properties:
        first_name:
          type: string
          example: Jesús
        last_name:
          type: string
          example: Terán
        email:
          type: string
          example: jmteran3d@example.com
        password:
          type: string
          example: secret123
